// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Greeting struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Greeting) Reset()         { *m = Greeting{} }
func (m *Greeting) String() string { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()    {}
func (*Greeting) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *Greeting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Greeting.Unmarshal(m, b)
}
func (m *Greeting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Greeting.Marshal(b, m, deterministic)
}
func (m *Greeting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Greeting.Merge(m, src)
}
func (m *Greeting) XXX_Size() int {
	return xxx_messageInfo_Greeting.Size(m)
}
func (m *Greeting) XXX_DiscardUnknown() {
	xxx_messageInfo_Greeting.DiscardUnknown(m)
}

var xxx_messageInfo_Greeting proto.InternalMessageInfo

func (m *Greeting) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Acknowledgement struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Acknowledgement) Reset()         { *m = Acknowledgement{} }
func (m *Acknowledgement) String() string { return proto.CompactTextString(m) }
func (*Acknowledgement) ProtoMessage()    {}
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *Acknowledgement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Acknowledgement.Unmarshal(m, b)
}
func (m *Acknowledgement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Acknowledgement.Marshal(b, m, deterministic)
}
func (m *Acknowledgement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Acknowledgement.Merge(m, src)
}
func (m *Acknowledgement) XXX_Size() int {
	return xxx_messageInfo_Acknowledgement.Size(m)
}
func (m *Acknowledgement) XXX_DiscardUnknown() {
	xxx_messageInfo_Acknowledgement.DiscardUnknown(m)
}

var xxx_messageInfo_Acknowledgement proto.InternalMessageInfo

func (m *Acknowledgement) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GreetCommand struct {
	AggregateIdentifier  string    `protobuf:"bytes,1,opt,name=aggregateIdentifier,proto3" json:"aggregateIdentifier,omitempty"`
	Message              *Greeting `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GreetCommand) Reset()         { *m = GreetCommand{} }
func (m *GreetCommand) String() string { return proto.CompactTextString(m) }
func (*GreetCommand) ProtoMessage()    {}
func (*GreetCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{3}
}

func (m *GreetCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetCommand.Unmarshal(m, b)
}
func (m *GreetCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetCommand.Marshal(b, m, deterministic)
}
func (m *GreetCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetCommand.Merge(m, src)
}
func (m *GreetCommand) XXX_Size() int {
	return xxx_messageInfo_GreetCommand.Size(m)
}
func (m *GreetCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetCommand.DiscardUnknown(m)
}

var xxx_messageInfo_GreetCommand proto.InternalMessageInfo

func (m *GreetCommand) GetAggregateIdentifier() string {
	if m != nil {
		return m.AggregateIdentifier
	}
	return ""
}

func (m *GreetCommand) GetMessage() *Greeting {
	if m != nil {
		return m.Message
	}
	return nil
}

type RecordCommand struct {
	AggregateIdentifier  string   `protobuf:"bytes,1,opt,name=aggregateIdentifier,proto3" json:"aggregateIdentifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordCommand) Reset()         { *m = RecordCommand{} }
func (m *RecordCommand) String() string { return proto.CompactTextString(m) }
func (*RecordCommand) ProtoMessage()    {}
func (*RecordCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{4}
}

func (m *RecordCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordCommand.Unmarshal(m, b)
}
func (m *RecordCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordCommand.Marshal(b, m, deterministic)
}
func (m *RecordCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordCommand.Merge(m, src)
}
func (m *RecordCommand) XXX_Size() int {
	return xxx_messageInfo_RecordCommand.Size(m)
}
func (m *RecordCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RecordCommand proto.InternalMessageInfo

func (m *RecordCommand) GetAggregateIdentifier() string {
	if m != nil {
		return m.AggregateIdentifier
	}
	return ""
}

type StopCommand struct {
	AggregateIdentifier  string   `protobuf:"bytes,1,opt,name=aggregateIdentifier,proto3" json:"aggregateIdentifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopCommand) Reset()         { *m = StopCommand{} }
func (m *StopCommand) String() string { return proto.CompactTextString(m) }
func (*StopCommand) ProtoMessage()    {}
func (*StopCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{5}
}

func (m *StopCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopCommand.Unmarshal(m, b)
}
func (m *StopCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopCommand.Marshal(b, m, deterministic)
}
func (m *StopCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopCommand.Merge(m, src)
}
func (m *StopCommand) XXX_Size() int {
	return xxx_messageInfo_StopCommand.Size(m)
}
func (m *StopCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_StopCommand.DiscardUnknown(m)
}

var xxx_messageInfo_StopCommand proto.InternalMessageInfo

func (m *StopCommand) GetAggregateIdentifier() string {
	if m != nil {
		return m.AggregateIdentifier
	}
	return ""
}

type GreetedEvent struct {
	Message              *Greeting `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GreetedEvent) Reset()         { *m = GreetedEvent{} }
func (m *GreetedEvent) String() string { return proto.CompactTextString(m) }
func (*GreetedEvent) ProtoMessage()    {}
func (*GreetedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{6}
}

func (m *GreetedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetedEvent.Unmarshal(m, b)
}
func (m *GreetedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetedEvent.Marshal(b, m, deterministic)
}
func (m *GreetedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetedEvent.Merge(m, src)
}
func (m *GreetedEvent) XXX_Size() int {
	return xxx_messageInfo_GreetedEvent.Size(m)
}
func (m *GreetedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GreetedEvent proto.InternalMessageInfo

func (m *GreetedEvent) GetMessage() *Greeting {
	if m != nil {
		return m.Message
	}
	return nil
}

type StartedRecordingEvent struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartedRecordingEvent) Reset()         { *m = StartedRecordingEvent{} }
func (m *StartedRecordingEvent) String() string { return proto.CompactTextString(m) }
func (*StartedRecordingEvent) ProtoMessage()    {}
func (*StartedRecordingEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{7}
}

func (m *StartedRecordingEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartedRecordingEvent.Unmarshal(m, b)
}
func (m *StartedRecordingEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartedRecordingEvent.Marshal(b, m, deterministic)
}
func (m *StartedRecordingEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartedRecordingEvent.Merge(m, src)
}
func (m *StartedRecordingEvent) XXX_Size() int {
	return xxx_messageInfo_StartedRecordingEvent.Size(m)
}
func (m *StartedRecordingEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StartedRecordingEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StartedRecordingEvent proto.InternalMessageInfo

type StoppedRecordingEvent struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoppedRecordingEvent) Reset()         { *m = StoppedRecordingEvent{} }
func (m *StoppedRecordingEvent) String() string { return proto.CompactTextString(m) }
func (*StoppedRecordingEvent) ProtoMessage()    {}
func (*StoppedRecordingEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{8}
}

func (m *StoppedRecordingEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoppedRecordingEvent.Unmarshal(m, b)
}
func (m *StoppedRecordingEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoppedRecordingEvent.Marshal(b, m, deterministic)
}
func (m *StoppedRecordingEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoppedRecordingEvent.Merge(m, src)
}
func (m *StoppedRecordingEvent) XXX_Size() int {
	return xxx_messageInfo_StoppedRecordingEvent.Size(m)
}
func (m *StoppedRecordingEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StoppedRecordingEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StoppedRecordingEvent proto.InternalMessageInfo

type SearchQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchQuery) Reset()         { *m = SearchQuery{} }
func (m *SearchQuery) String() string { return proto.CompactTextString(m) }
func (*SearchQuery) ProtoMessage()    {}
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{9}
}

func (m *SearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQuery.Unmarshal(m, b)
}
func (m *SearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQuery.Marshal(b, m, deterministic)
}
func (m *SearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQuery.Merge(m, src)
}
func (m *SearchQuery) XXX_Size() int {
	return xxx_messageInfo_SearchQuery.Size(m)
}
func (m *SearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQuery proto.InternalMessageInfo

func (m *SearchQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type PublicKey struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{10}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *PublicKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PrivateKey struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{11}
}

func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (m *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(m, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *PrivateKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AccessToken struct {
	Jwt                  string   `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessToken) Reset()         { *m = AccessToken{} }
func (m *AccessToken) String() string { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()    {}
func (*AccessToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{12}
}

func (m *AccessToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessToken.Unmarshal(m, b)
}
func (m *AccessToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessToken.Marshal(b, m, deterministic)
}
func (m *AccessToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessToken.Merge(m, src)
}
func (m *AccessToken) XXX_Size() int {
	return xxx_messageInfo_AccessToken.Size(m)
}
func (m *AccessToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessToken.DiscardUnknown(m)
}

var xxx_messageInfo_AccessToken proto.InternalMessageInfo

func (m *AccessToken) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

type TrustedKeyRequest struct {
	PublicKey            *PublicKey `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Nonce                []byte     `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature            *Signature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	IsKeyManager         bool       `protobuf:"varint,5,opt,name=isKeyManager,proto3" json:"isKeyManager,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TrustedKeyRequest) Reset()         { *m = TrustedKeyRequest{} }
func (m *TrustedKeyRequest) String() string { return proto.CompactTextString(m) }
func (*TrustedKeyRequest) ProtoMessage()    {}
func (*TrustedKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{13}
}

func (m *TrustedKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrustedKeyRequest.Unmarshal(m, b)
}
func (m *TrustedKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrustedKeyRequest.Marshal(b, m, deterministic)
}
func (m *TrustedKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustedKeyRequest.Merge(m, src)
}
func (m *TrustedKeyRequest) XXX_Size() int {
	return xxx_messageInfo_TrustedKeyRequest.Size(m)
}
func (m *TrustedKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustedKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrustedKeyRequest proto.InternalMessageInfo

func (m *TrustedKeyRequest) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *TrustedKeyRequest) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *TrustedKeyRequest) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TrustedKeyRequest) GetIsKeyManager() bool {
	if m != nil {
		return m.IsKeyManager
	}
	return false
}

type TrustedKeyResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrustedKeyResponse) Reset()         { *m = TrustedKeyResponse{} }
func (m *TrustedKeyResponse) String() string { return proto.CompactTextString(m) }
func (*TrustedKeyResponse) ProtoMessage()    {}
func (*TrustedKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{14}
}

func (m *TrustedKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrustedKeyResponse.Unmarshal(m, b)
}
func (m *TrustedKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrustedKeyResponse.Marshal(b, m, deterministic)
}
func (m *TrustedKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustedKeyResponse.Merge(m, src)
}
func (m *TrustedKeyResponse) XXX_Size() int {
	return xxx_messageInfo_TrustedKeyResponse.Size(m)
}
func (m *TrustedKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustedKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrustedKeyResponse proto.InternalMessageInfo

func (m *TrustedKeyResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TrustedKeyResponse) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Signature struct {
	Format               string   `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Blob                 []byte   `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	Rest                 []byte   `protobuf:"bytes,3,opt,name=rest,proto3" json:"rest,omitempty"`
	SignatureName        string   `protobuf:"bytes,4,opt,name=signatureName,proto3" json:"signatureName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{15}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Signature) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *Signature) GetRest() []byte {
	if m != nil {
		return m.Rest
	}
	return nil
}

func (m *Signature) GetSignatureName() string {
	if m != nil {
		return m.SignatureName
	}
	return ""
}

type Status struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{16}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Credentials struct {
	Identifier           string     `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Secret               string     `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Signature            *Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{17}
}

func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (m *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(m, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Credentials) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Credentials) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*Greeting)(nil), "org.leialearns.grpc.example.Greeting")
	proto.RegisterType((*Acknowledgement)(nil), "org.leialearns.grpc.example.Acknowledgement")
	proto.RegisterType((*Empty)(nil), "org.leialearns.grpc.example.Empty")
	proto.RegisterType((*GreetCommand)(nil), "org.leialearns.grpc.example.GreetCommand")
	proto.RegisterType((*RecordCommand)(nil), "org.leialearns.grpc.example.RecordCommand")
	proto.RegisterType((*StopCommand)(nil), "org.leialearns.grpc.example.StopCommand")
	proto.RegisterType((*GreetedEvent)(nil), "org.leialearns.grpc.example.GreetedEvent")
	proto.RegisterType((*StartedRecordingEvent)(nil), "org.leialearns.grpc.example.StartedRecordingEvent")
	proto.RegisterType((*StoppedRecordingEvent)(nil), "org.leialearns.grpc.example.StoppedRecordingEvent")
	proto.RegisterType((*SearchQuery)(nil), "org.leialearns.grpc.example.SearchQuery")
	proto.RegisterType((*PublicKey)(nil), "org.leialearns.grpc.example.PublicKey")
	proto.RegisterType((*PrivateKey)(nil), "org.leialearns.grpc.example.PrivateKey")
	proto.RegisterType((*AccessToken)(nil), "org.leialearns.grpc.example.AccessToken")
	proto.RegisterType((*TrustedKeyRequest)(nil), "org.leialearns.grpc.example.TrustedKeyRequest")
	proto.RegisterType((*TrustedKeyResponse)(nil), "org.leialearns.grpc.example.TrustedKeyResponse")
	proto.RegisterType((*Signature)(nil), "org.leialearns.grpc.example.Signature")
	proto.RegisterType((*Status)(nil), "org.leialearns.grpc.example.Status")
	proto.RegisterType((*Credentials)(nil), "org.leialearns.grpc.example.Credentials")
}

func init() {
	proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6)
}

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5d, 0x4f, 0x13, 0x4d,
	0x14, 0xee, 0x42, 0x5b, 0xe8, 0x29, 0x7d, 0x79, 0x99, 0x97, 0x17, 0x1b, 0x34, 0x4a, 0x06, 0xd4,
	0x26, 0x9a, 0x96, 0x60, 0xe2, 0x8d, 0x31, 0x58, 0x91, 0x18, 0x83, 0x1f, 0xb8, 0xe5, 0x46, 0x12,
	0x49, 0xa6, 0xbb, 0x87, 0x65, 0xa5, 0x3b, 0xb3, 0xcc, 0x4c, 0xc1, 0x72, 0xe7, 0xb5, 0xbf, 0xc7,
	0x1f, 0xe3, 0xbf, 0x31, 0xb3, 0xbb, 0x6d, 0xb7, 0x40, 0x96, 0x85, 0x78, 0x37, 0xe7, 0xec, 0x73,
	0x9e, 0x39, 0x1f, 0x73, 0x9e, 0x16, 0x6a, 0xf8, 0x9d, 0x05, 0x61, 0x0f, 0x9b, 0xa1, 0x14, 0x5a,
	0x90, 0xbb, 0x42, 0x7a, 0xcd, 0x1e, 0xfa, 0xac, 0x87, 0x4c, 0x72, 0xd5, 0xf4, 0x64, 0xe8, 0x34,
	0x13, 0x08, 0x5d, 0x83, 0xd9, 0xb7, 0x12, 0x51, 0xfb, 0xdc, 0x23, 0x75, 0x98, 0x09, 0x50, 0x29,
	0xe6, 0x61, 0xdd, 0x5a, 0xb1, 0x1a, 0x15, 0x7b, 0x68, 0xd2, 0x27, 0x30, 0xdf, 0x76, 0x8e, 0xb9,
	0x38, 0xeb, 0xa1, 0xeb, 0x61, 0x80, 0x5c, 0x67, 0x80, 0x67, 0xa0, 0xb4, 0x1d, 0x84, 0x7a, 0x40,
	0x7f, 0x58, 0x30, 0x17, 0x91, 0x6f, 0x89, 0x20, 0x60, 0xdc, 0x25, 0xeb, 0xf0, 0x1f, 0xf3, 0x3c,
	0x89, 0x1e, 0xd3, 0xf8, 0xce, 0x45, 0xae, 0xfd, 0x43, 0x1f, 0x65, 0x12, 0x7f, 0xd5, 0x27, 0xb2,
	0x39, 0xbe, 0x65, 0x6a, 0xc5, 0x6a, 0x54, 0x37, 0x1e, 0x36, 0x33, 0xaa, 0x69, 0x0e, 0x4b, 0x19,
	0x27, 0xd3, 0x86, 0x9a, 0x8d, 0x8e, 0x90, 0xee, 0xad, 0x73, 0xa0, 0x9b, 0x50, 0xed, 0x68, 0x11,
	0xde, 0x9e, 0xe0, 0x53, 0xd2, 0x06, 0x74, 0xb7, 0x4f, 0x4d, 0xeb, 0x36, 0x27, 0x5b, 0x77, 0xf3,
	0xa2, 0xee, 0xc0, 0xff, 0x1d, 0xcd, 0xa4, 0x46, 0x37, 0xae, 0xcd, 0xe7, 0x5e, 0xc4, 0x1c, 0x7f,
	0x10, 0x61, 0x78, 0xe9, 0xc3, 0x2a, 0x54, 0x3b, 0xc8, 0xa4, 0x73, 0xf4, 0xb9, 0x8f, 0x72, 0x40,
	0x16, 0xa1, 0x74, 0x62, 0x0e, 0x49, 0xd6, 0xb1, 0x41, 0x5f, 0x42, 0x65, 0xb7, 0xdf, 0xed, 0xf9,
	0xce, 0x0e, 0x0e, 0xc8, 0x3d, 0xa8, 0x84, 0x43, 0x23, 0x81, 0x8d, 0x1d, 0x84, 0x40, 0x91, 0xb3,
	0x20, 0x1e, 0x4a, 0xc5, 0x8e, 0xce, 0xf4, 0x15, 0xc0, 0xae, 0xf4, 0x4f, 0x99, 0x46, 0x83, 0xb8,
	0x0f, 0x10, 0x8e, 0xac, 0x84, 0x20, 0xe5, 0xb9, 0x92, 0xe1, 0x01, 0x54, 0xdb, 0x8e, 0x83, 0x4a,
	0xed, 0x89, 0x63, 0xe4, 0xe4, 0x5f, 0x98, 0xfe, 0x76, 0xa6, 0x93, 0x58, 0x73, 0xa4, 0xbf, 0x2d,
	0x58, 0xd8, 0x93, 0x7d, 0xa5, 0xd1, 0xdd, 0xc1, 0x81, 0x8d, 0x27, 0x7d, 0x54, 0x9a, 0xbc, 0xb9,
	0x98, 0x6a, 0x75, 0xe3, 0x51, 0x66, 0x47, 0x47, 0x55, 0xa6, 0x4b, 0x5a, 0x84, 0x12, 0x17, 0xdc,
	0x89, 0x33, 0x9a, 0xb3, 0x63, 0xc3, 0x70, 0x2b, 0xdf, 0xe3, 0x4c, 0xf7, 0x25, 0xd6, 0x8b, 0x39,
	0xb8, 0x3b, 0x43, 0xb4, 0x3d, 0x0e, 0x24, 0x14, 0xe6, 0x7c, 0xb5, 0x83, 0x83, 0x0f, 0x8c, 0x33,
	0x0f, 0x65, 0xbd, 0xb4, 0x62, 0x35, 0x66, 0xed, 0x09, 0x1f, 0xf5, 0x80, 0xa4, 0x4b, 0x53, 0xa1,
	0xe0, 0x0a, 0xc9, 0x0b, 0x28, 0x2b, 0xcd, 0x74, 0x5f, 0x25, 0x85, 0xad, 0x66, 0x5f, 0x1e, 0x41,
	0xed, 0x24, 0xe4, 0xea, 0x92, 0xe8, 0x09, 0x54, 0x46, 0x49, 0x92, 0x25, 0x28, 0x1f, 0x0a, 0x19,
	0xb0, 0x61, 0x9b, 0x13, 0xcb, 0x8c, 0xa7, 0xdb, 0x13, 0xdd, 0x24, 0x32, 0x3a, 0x1b, 0x9f, 0x44,
	0xa5, 0xeb, 0xd3, 0xb1, 0xcf, 0x9c, 0xc9, 0x1a, 0xd4, 0x46, 0x65, 0x7e, 0x34, 0xf3, 0x2c, 0x46,
	0x34, 0x93, 0x4e, 0xfa, 0x1c, 0xca, 0x71, 0x6a, 0x86, 0xc3, 0x11, 0x6e, 0xfc, 0xf0, 0x4b, 0x76,
	0x74, 0x4e, 0x4b, 0xc9, 0xd4, 0xa4, 0x94, 0xfc, 0xb4, 0xa0, 0xba, 0x25, 0x31, 0x5a, 0x25, 0xd6,
	0x53, 0xe6, 0x51, 0xf9, 0x17, 0x57, 0x2e, 0xe5, 0x31, 0xd5, 0x28, 0x74, 0x24, 0xea, 0x84, 0x28,
	0xb1, 0x26, 0xa7, 0x38, 0x7d, 0xcb, 0x29, 0x6e, 0xfc, 0x9a, 0x85, 0x7f, 0xe2, 0x45, 0x96, 0x1d,
	0x94, 0xa7, 0xbe, 0x83, 0xe4, 0x00, 0x4a, 0x91, 0x87, 0xe4, 0x5b, 0xe1, 0xe5, 0xa7, 0x99, 0xb0,
	0x0b, 0x1a, 0x4b, 0x0b, 0x64, 0x1f, 0x2a, 0xc3, 0x58, 0x45, 0x68, 0x66, 0x70, 0xa4, 0xb9, 0xcb,
	0xf9, 0xf2, 0xa0, 0x85, 0x75, 0x8b, 0xd8, 0x50, 0x8e, 0x55, 0x22, 0x17, 0x71, 0x0e, 0x0c, 0x2d,
	0x90, 0x5d, 0x28, 0x1a, 0x01, 0xfa, 0x8b, 0x8c, 0x5f, 0xa1, 0x1c, 0x2b, 0x17, 0x69, 0x64, 0x4f,
	0x6c, 0x2c, 0x6f, 0x37, 0x69, 0x02, 0x83, 0xf9, 0xf7, 0xbe, 0xd2, 0xe3, 0xcd, 0xcb, 0xd7, 0xe6,
	0x9c, 0xfa, 0x12, 0x5d, 0x71, 0x0e, 0x0b, 0x5b, 0x47, 0x8c, 0x7b, 0x98, 0xbe, 0xa4, 0x99, 0x49,
	0x70, 0x49, 0xe3, 0x96, 0x5b, 0xb9, 0xf1, 0xb1, 0x70, 0xd0, 0x42, 0xc3, 0x5a, 0xb7, 0xc8, 0x01,
	0xd4, 0x3a, 0xa8, 0x53, 0xb2, 0xfc, 0x38, 0x3b, 0xf1, 0x11, 0x30, 0xe7, 0x74, 0x70, 0x58, 0x5b,
	0x7a, 0x4b, 0xb3, 0x07, 0x95, 0x42, 0xe6, 0xbb, 0xa4, 0x61, 0xa6, 0x54, 0x69, 0xf7, 0xf5, 0x91,
	0x90, 0xfe, 0x39, 0xde, 0x80, 0xbe, 0x71, 0xcd, 0xb6, 0x8d, 0x7e, 0x6a, 0x68, 0x81, 0x7c, 0x81,
	0xe2, 0x9e, 0x1f, 0x5c, 0xc7, 0x9e, 0x8a, 0xc9, 0xfd, 0xca, 0x5e, 0x2f, 0xed, 0x2f, 0x2a, 0xe9,
	0xb4, 0xc2, 0x63, 0xaf, 0x65, 0x20, 0xad, 0x04, 0xd2, 0x2d, 0x47, 0xff, 0xcf, 0x9e, 0xfd, 0x09,
	0x00, 0x00, 0xff, 0xff, 0x03, 0x2f, 0xbe, 0xdd, 0xb0, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterServiceClient is the client API for GreeterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterServiceClient interface {
	Greet(ctx context.Context, in *Greeting, opts ...grpc.CallOption) (*Acknowledgement, error)
	Greetings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GreeterService_GreetingsClient, error)
	Record(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Search(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (GreeterService_SearchClient, error)
	ListTrustedKeys(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GreeterService_ListTrustedKeysClient, error)
	ChangeTrustedKeys(ctx context.Context, opts ...grpc.CallOption) (GreeterService_ChangeTrustedKeysClient, error)
	SetPrivateKey(ctx context.Context, in *PrivateKey, opts ...grpc.CallOption) (*Empty, error)
	ChangeCredentials(ctx context.Context, opts ...grpc.CallOption) (GreeterService_ChangeCredentialsClient, error)
	Authorize(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*AccessToken, error)
	Time(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*Greeting, error)
}

type greeterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterServiceClient(cc grpc.ClientConnInterface) GreeterServiceClient {
	return &greeterServiceClient{cc}
}

func (c *greeterServiceClient) Greet(ctx context.Context, in *Greeting, opts ...grpc.CallOption) (*Acknowledgement, error) {
	out := new(Acknowledgement)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterServiceClient) Greetings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GreeterService_GreetingsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreeterService_serviceDesc.Streams[0], "/org.leialearns.grpc.example.GreeterService/Greetings", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterServiceGreetingsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreeterService_GreetingsClient interface {
	Recv() (*Greeting, error)
	grpc.ClientStream
}

type greeterServiceGreetingsClient struct {
	grpc.ClientStream
}

func (x *greeterServiceGreetingsClient) Recv() (*Greeting, error) {
	m := new(Greeting)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterServiceClient) Record(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/Record", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterServiceClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterServiceClient) Search(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (GreeterService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreeterService_serviceDesc.Streams[1], "/org.leialearns.grpc.example.GreeterService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreeterService_SearchClient interface {
	Recv() (*Greeting, error)
	grpc.ClientStream
}

type greeterServiceSearchClient struct {
	grpc.ClientStream
}

func (x *greeterServiceSearchClient) Recv() (*Greeting, error) {
	m := new(Greeting)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterServiceClient) ListTrustedKeys(ctx context.Context, in *Empty, opts ...grpc.CallOption) (GreeterService_ListTrustedKeysClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreeterService_serviceDesc.Streams[2], "/org.leialearns.grpc.example.GreeterService/ListTrustedKeys", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterServiceListTrustedKeysClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreeterService_ListTrustedKeysClient interface {
	Recv() (*PublicKey, error)
	grpc.ClientStream
}

type greeterServiceListTrustedKeysClient struct {
	grpc.ClientStream
}

func (x *greeterServiceListTrustedKeysClient) Recv() (*PublicKey, error) {
	m := new(PublicKey)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterServiceClient) ChangeTrustedKeys(ctx context.Context, opts ...grpc.CallOption) (GreeterService_ChangeTrustedKeysClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreeterService_serviceDesc.Streams[3], "/org.leialearns.grpc.example.GreeterService/ChangeTrustedKeys", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterServiceChangeTrustedKeysClient{stream}
	return x, nil
}

type GreeterService_ChangeTrustedKeysClient interface {
	Send(*TrustedKeyRequest) error
	Recv() (*TrustedKeyResponse, error)
	grpc.ClientStream
}

type greeterServiceChangeTrustedKeysClient struct {
	grpc.ClientStream
}

func (x *greeterServiceChangeTrustedKeysClient) Send(m *TrustedKeyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greeterServiceChangeTrustedKeysClient) Recv() (*TrustedKeyResponse, error) {
	m := new(TrustedKeyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterServiceClient) SetPrivateKey(ctx context.Context, in *PrivateKey, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/SetPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterServiceClient) ChangeCredentials(ctx context.Context, opts ...grpc.CallOption) (GreeterService_ChangeCredentialsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreeterService_serviceDesc.Streams[4], "/org.leialearns.grpc.example.GreeterService/ChangeCredentials", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterServiceChangeCredentialsClient{stream}
	return x, nil
}

type GreeterService_ChangeCredentialsClient interface {
	Send(*Credentials) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type greeterServiceChangeCredentialsClient struct {
	grpc.ClientStream
}

func (x *greeterServiceChangeCredentialsClient) Send(m *Credentials) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greeterServiceChangeCredentialsClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterServiceClient) Authorize(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*AccessToken, error) {
	out := new(AccessToken)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterServiceClient) Time(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*Greeting, error) {
	out := new(Greeting)
	err := c.cc.Invoke(ctx, "/org.leialearns.grpc.example.GreeterService/Time", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServiceServer is the server API for GreeterService service.
type GreeterServiceServer interface {
	Greet(context.Context, *Greeting) (*Acknowledgement, error)
	Greetings(*Empty, GreeterService_GreetingsServer) error
	Record(context.Context, *Empty) (*Empty, error)
	Stop(context.Context, *Empty) (*Empty, error)
	Search(*SearchQuery, GreeterService_SearchServer) error
	ListTrustedKeys(*Empty, GreeterService_ListTrustedKeysServer) error
	ChangeTrustedKeys(GreeterService_ChangeTrustedKeysServer) error
	SetPrivateKey(context.Context, *PrivateKey) (*Empty, error)
	ChangeCredentials(GreeterService_ChangeCredentialsServer) error
	Authorize(context.Context, *Credentials) (*AccessToken, error)
	Time(context.Context, *AccessToken) (*Greeting, error)
}

// UnimplementedGreeterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServiceServer struct {
}

func (*UnimplementedGreeterServiceServer) Greet(ctx context.Context, req *Greeting) (*Acknowledgement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}
func (*UnimplementedGreeterServiceServer) Greetings(req *Empty, srv GreeterService_GreetingsServer) error {
	return status.Errorf(codes.Unimplemented, "method Greetings not implemented")
}
func (*UnimplementedGreeterServiceServer) Record(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Record not implemented")
}
func (*UnimplementedGreeterServiceServer) Stop(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedGreeterServiceServer) Search(req *SearchQuery, srv GreeterService_SearchServer) error {
	return status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedGreeterServiceServer) ListTrustedKeys(req *Empty, srv GreeterService_ListTrustedKeysServer) error {
	return status.Errorf(codes.Unimplemented, "method ListTrustedKeys not implemented")
}
func (*UnimplementedGreeterServiceServer) ChangeTrustedKeys(srv GreeterService_ChangeTrustedKeysServer) error {
	return status.Errorf(codes.Unimplemented, "method ChangeTrustedKeys not implemented")
}
func (*UnimplementedGreeterServiceServer) SetPrivateKey(ctx context.Context, req *PrivateKey) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPrivateKey not implemented")
}
func (*UnimplementedGreeterServiceServer) ChangeCredentials(srv GreeterService_ChangeCredentialsServer) error {
	return status.Errorf(codes.Unimplemented, "method ChangeCredentials not implemented")
}
func (*UnimplementedGreeterServiceServer) Authorize(ctx context.Context, req *Credentials) (*AccessToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}
func (*UnimplementedGreeterServiceServer) Time(ctx context.Context, req *AccessToken) (*Greeting, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Time not implemented")
}

func RegisterGreeterServiceServer(s *grpc.Server, srv GreeterServiceServer) {
	s.RegisterService(&_GreeterService_serviceDesc, srv)
}

func _GreeterService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Greeting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).Greet(ctx, req.(*Greeting))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreeterService_Greetings_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServiceServer).Greetings(m, &greeterServiceGreetingsServer{stream})
}

type GreeterService_GreetingsServer interface {
	Send(*Greeting) error
	grpc.ServerStream
}

type greeterServiceGreetingsServer struct {
	grpc.ServerStream
}

func (x *greeterServiceGreetingsServer) Send(m *Greeting) error {
	return x.ServerStream.SendMsg(m)
}

func _GreeterService_Record_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).Record(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/Record",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).Record(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreeterService_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreeterService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServiceServer).Search(m, &greeterServiceSearchServer{stream})
}

type GreeterService_SearchServer interface {
	Send(*Greeting) error
	grpc.ServerStream
}

type greeterServiceSearchServer struct {
	grpc.ServerStream
}

func (x *greeterServiceSearchServer) Send(m *Greeting) error {
	return x.ServerStream.SendMsg(m)
}

func _GreeterService_ListTrustedKeys_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServiceServer).ListTrustedKeys(m, &greeterServiceListTrustedKeysServer{stream})
}

type GreeterService_ListTrustedKeysServer interface {
	Send(*PublicKey) error
	grpc.ServerStream
}

type greeterServiceListTrustedKeysServer struct {
	grpc.ServerStream
}

func (x *greeterServiceListTrustedKeysServer) Send(m *PublicKey) error {
	return x.ServerStream.SendMsg(m)
}

func _GreeterService_ChangeTrustedKeys_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreeterServiceServer).ChangeTrustedKeys(&greeterServiceChangeTrustedKeysServer{stream})
}

type GreeterService_ChangeTrustedKeysServer interface {
	Send(*TrustedKeyResponse) error
	Recv() (*TrustedKeyRequest, error)
	grpc.ServerStream
}

type greeterServiceChangeTrustedKeysServer struct {
	grpc.ServerStream
}

func (x *greeterServiceChangeTrustedKeysServer) Send(m *TrustedKeyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greeterServiceChangeTrustedKeysServer) Recv() (*TrustedKeyRequest, error) {
	m := new(TrustedKeyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreeterService_SetPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).SetPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/SetPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).SetPrivateKey(ctx, req.(*PrivateKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreeterService_ChangeCredentials_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreeterServiceServer).ChangeCredentials(&greeterServiceChangeCredentialsServer{stream})
}

type GreeterService_ChangeCredentialsServer interface {
	SendAndClose(*Empty) error
	Recv() (*Credentials, error)
	grpc.ServerStream
}

type greeterServiceChangeCredentialsServer struct {
	grpc.ServerStream
}

func (x *greeterServiceChangeCredentialsServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greeterServiceChangeCredentialsServer) Recv() (*Credentials, error) {
	m := new(Credentials)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreeterService_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).Authorize(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreeterService_Time_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServiceServer).Time(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/org.leialearns.grpc.example.GreeterService/Time",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServiceServer).Time(ctx, req.(*AccessToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _GreeterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.leialearns.grpc.example.GreeterService",
	HandlerType: (*GreeterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _GreeterService_Greet_Handler,
		},
		{
			MethodName: "Record",
			Handler:    _GreeterService_Record_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _GreeterService_Stop_Handler,
		},
		{
			MethodName: "SetPrivateKey",
			Handler:    _GreeterService_SetPrivateKey_Handler,
		},
		{
			MethodName: "Authorize",
			Handler:    _GreeterService_Authorize_Handler,
		},
		{
			MethodName: "Time",
			Handler:    _GreeterService_Time_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Greetings",
			Handler:       _GreeterService_Greetings_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Search",
			Handler:       _GreeterService_Search_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListTrustedKeys",
			Handler:       _GreeterService_ListTrustedKeys_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ChangeTrustedKeys",
			Handler:       _GreeterService_ChangeTrustedKeys_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ChangeCredentials",
			Handler:       _GreeterService_ChangeCredentials_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "example.proto",
}
