// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

package axonserver

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An instruction from Application Node to the AxonServer platform
type PlatformInboundInstruction struct {
	// The actual instruction to send
	//
	// Types that are valid to be assigned to Request:
	//	*PlatformInboundInstruction_Register
	//	*PlatformInboundInstruction_EventProcessorInfo
	//	*PlatformInboundInstruction_Heartbeat
	//	*PlatformInboundInstruction_Ack
	Request isPlatformInboundInstruction_Request `protobuf_oneof:"request"`
	// Instruction identifier. If this identifier is set, this instruction will be acknowledged via outbound stream
	InstructionId        string   `protobuf:"bytes,5,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlatformInboundInstruction) Reset()         { *m = PlatformInboundInstruction{} }
func (m *PlatformInboundInstruction) String() string { return proto.CompactTextString(m) }
func (*PlatformInboundInstruction) ProtoMessage()    {}
func (*PlatformInboundInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{0}
}

func (m *PlatformInboundInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlatformInboundInstruction.Unmarshal(m, b)
}
func (m *PlatformInboundInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlatformInboundInstruction.Marshal(b, m, deterministic)
}
func (m *PlatformInboundInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformInboundInstruction.Merge(m, src)
}
func (m *PlatformInboundInstruction) XXX_Size() int {
	return xxx_messageInfo_PlatformInboundInstruction.Size(m)
}
func (m *PlatformInboundInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformInboundInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformInboundInstruction proto.InternalMessageInfo

type isPlatformInboundInstruction_Request interface {
	isPlatformInboundInstruction_Request()
}

type PlatformInboundInstruction_Register struct {
	Register *ClientIdentification `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type PlatformInboundInstruction_EventProcessorInfo struct {
	EventProcessorInfo *EventProcessorInfo `protobuf:"bytes,2,opt,name=event_processor_info,json=eventProcessorInfo,proto3,oneof"`
}

type PlatformInboundInstruction_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

type PlatformInboundInstruction_Ack struct {
	Ack *InstructionAck `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

func (*PlatformInboundInstruction_Register) isPlatformInboundInstruction_Request() {}

func (*PlatformInboundInstruction_EventProcessorInfo) isPlatformInboundInstruction_Request() {}

func (*PlatformInboundInstruction_Heartbeat) isPlatformInboundInstruction_Request() {}

func (*PlatformInboundInstruction_Ack) isPlatformInboundInstruction_Request() {}

func (m *PlatformInboundInstruction) GetRequest() isPlatformInboundInstruction_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PlatformInboundInstruction) GetRegister() *ClientIdentification {
	if x, ok := m.GetRequest().(*PlatformInboundInstruction_Register); ok {
		return x.Register
	}
	return nil
}

func (m *PlatformInboundInstruction) GetEventProcessorInfo() *EventProcessorInfo {
	if x, ok := m.GetRequest().(*PlatformInboundInstruction_EventProcessorInfo); ok {
		return x.EventProcessorInfo
	}
	return nil
}

func (m *PlatformInboundInstruction) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetRequest().(*PlatformInboundInstruction_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *PlatformInboundInstruction) GetAck() *InstructionAck {
	if x, ok := m.GetRequest().(*PlatformInboundInstruction_Ack); ok {
		return x.Ack
	}
	return nil
}

func (m *PlatformInboundInstruction) GetInstructionId() string {
	if m != nil {
		return m.InstructionId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PlatformInboundInstruction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PlatformInboundInstruction_Register)(nil),
		(*PlatformInboundInstruction_EventProcessorInfo)(nil),
		(*PlatformInboundInstruction_Heartbeat)(nil),
		(*PlatformInboundInstruction_Ack)(nil),
	}
}

// An instruction or information from the AxonServer Platform to the Application Node
type PlatformOutboundInstruction struct {
	// The actual instruction or information
	//
	// Types that are valid to be assigned to Request:
	//	*PlatformOutboundInstruction_NodeNotification
	//	*PlatformOutboundInstruction_RequestReconnect
	//	*PlatformOutboundInstruction_PauseEventProcessor
	//	*PlatformOutboundInstruction_StartEventProcessor
	//	*PlatformOutboundInstruction_ReleaseSegment
	//	*PlatformOutboundInstruction_RequestEventProcessorInfo
	//	*PlatformOutboundInstruction_SplitEventProcessorSegment
	//	*PlatformOutboundInstruction_MergeEventProcessorSegment
	//	*PlatformOutboundInstruction_Heartbeat
	//	*PlatformOutboundInstruction_Ack
	Request isPlatformOutboundInstruction_Request `protobuf_oneof:"request"`
	// Instruction identifier. If this identifier is set, this instruction will be acknowledged via inbound stream
	InstructionId        string   `protobuf:"bytes,12,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlatformOutboundInstruction) Reset()         { *m = PlatformOutboundInstruction{} }
func (m *PlatformOutboundInstruction) String() string { return proto.CompactTextString(m) }
func (*PlatformOutboundInstruction) ProtoMessage()    {}
func (*PlatformOutboundInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{1}
}

func (m *PlatformOutboundInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlatformOutboundInstruction.Unmarshal(m, b)
}
func (m *PlatformOutboundInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlatformOutboundInstruction.Marshal(b, m, deterministic)
}
func (m *PlatformOutboundInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformOutboundInstruction.Merge(m, src)
}
func (m *PlatformOutboundInstruction) XXX_Size() int {
	return xxx_messageInfo_PlatformOutboundInstruction.Size(m)
}
func (m *PlatformOutboundInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformOutboundInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformOutboundInstruction proto.InternalMessageInfo

type isPlatformOutboundInstruction_Request interface {
	isPlatformOutboundInstruction_Request()
}

type PlatformOutboundInstruction_NodeNotification struct {
	NodeNotification *NodeInfo `protobuf:"bytes,1,opt,name=node_notification,json=nodeNotification,proto3,oneof"`
}

type PlatformOutboundInstruction_RequestReconnect struct {
	RequestReconnect *RequestReconnect `protobuf:"bytes,3,opt,name=request_reconnect,json=requestReconnect,proto3,oneof"`
}

type PlatformOutboundInstruction_PauseEventProcessor struct {
	PauseEventProcessor *EventProcessorReference `protobuf:"bytes,4,opt,name=pause_event_processor,json=pauseEventProcessor,proto3,oneof"`
}

type PlatformOutboundInstruction_StartEventProcessor struct {
	StartEventProcessor *EventProcessorReference `protobuf:"bytes,5,opt,name=start_event_processor,json=startEventProcessor,proto3,oneof"`
}

type PlatformOutboundInstruction_ReleaseSegment struct {
	ReleaseSegment *EventProcessorSegmentReference `protobuf:"bytes,6,opt,name=release_segment,json=releaseSegment,proto3,oneof"`
}

type PlatformOutboundInstruction_RequestEventProcessorInfo struct {
	RequestEventProcessorInfo *EventProcessorReference `protobuf:"bytes,7,opt,name=request_event_processor_info,json=requestEventProcessorInfo,proto3,oneof"`
}

type PlatformOutboundInstruction_SplitEventProcessorSegment struct {
	SplitEventProcessorSegment *EventProcessorSegmentReference `protobuf:"bytes,8,opt,name=split_event_processor_segment,json=splitEventProcessorSegment,proto3,oneof"`
}

type PlatformOutboundInstruction_MergeEventProcessorSegment struct {
	MergeEventProcessorSegment *EventProcessorSegmentReference `protobuf:"bytes,9,opt,name=merge_event_processor_segment,json=mergeEventProcessorSegment,proto3,oneof"`
}

type PlatformOutboundInstruction_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,10,opt,name=heartbeat,proto3,oneof"`
}

type PlatformOutboundInstruction_Ack struct {
	Ack *InstructionAck `protobuf:"bytes,11,opt,name=ack,proto3,oneof"`
}

func (*PlatformOutboundInstruction_NodeNotification) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_RequestReconnect) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_PauseEventProcessor) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_StartEventProcessor) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_ReleaseSegment) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_RequestEventProcessorInfo) isPlatformOutboundInstruction_Request() {
}

func (*PlatformOutboundInstruction_SplitEventProcessorSegment) isPlatformOutboundInstruction_Request() {
}

func (*PlatformOutboundInstruction_MergeEventProcessorSegment) isPlatformOutboundInstruction_Request() {
}

func (*PlatformOutboundInstruction_Heartbeat) isPlatformOutboundInstruction_Request() {}

func (*PlatformOutboundInstruction_Ack) isPlatformOutboundInstruction_Request() {}

func (m *PlatformOutboundInstruction) GetRequest() isPlatformOutboundInstruction_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetNodeNotification() *NodeInfo {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_NodeNotification); ok {
		return x.NodeNotification
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetRequestReconnect() *RequestReconnect {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_RequestReconnect); ok {
		return x.RequestReconnect
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetPauseEventProcessor() *EventProcessorReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_PauseEventProcessor); ok {
		return x.PauseEventProcessor
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetStartEventProcessor() *EventProcessorReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_StartEventProcessor); ok {
		return x.StartEventProcessor
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetReleaseSegment() *EventProcessorSegmentReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_ReleaseSegment); ok {
		return x.ReleaseSegment
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetRequestEventProcessorInfo() *EventProcessorReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_RequestEventProcessorInfo); ok {
		return x.RequestEventProcessorInfo
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetSplitEventProcessorSegment() *EventProcessorSegmentReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_SplitEventProcessorSegment); ok {
		return x.SplitEventProcessorSegment
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetMergeEventProcessorSegment() *EventProcessorSegmentReference {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_MergeEventProcessorSegment); ok {
		return x.MergeEventProcessorSegment
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetAck() *InstructionAck {
	if x, ok := m.GetRequest().(*PlatformOutboundInstruction_Ack); ok {
		return x.Ack
	}
	return nil
}

func (m *PlatformOutboundInstruction) GetInstructionId() string {
	if m != nil {
		return m.InstructionId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PlatformOutboundInstruction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PlatformOutboundInstruction_NodeNotification)(nil),
		(*PlatformOutboundInstruction_RequestReconnect)(nil),
		(*PlatformOutboundInstruction_PauseEventProcessor)(nil),
		(*PlatformOutboundInstruction_StartEventProcessor)(nil),
		(*PlatformOutboundInstruction_ReleaseSegment)(nil),
		(*PlatformOutboundInstruction_RequestEventProcessorInfo)(nil),
		(*PlatformOutboundInstruction_SplitEventProcessorSegment)(nil),
		(*PlatformOutboundInstruction_MergeEventProcessorSegment)(nil),
		(*PlatformOutboundInstruction_Heartbeat)(nil),
		(*PlatformOutboundInstruction_Ack)(nil),
	}
}

// Message send when AxonServer requests the client to re-establish its connection with the Platform
type RequestReconnect struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestReconnect) Reset()         { *m = RequestReconnect{} }
func (m *RequestReconnect) String() string { return proto.CompactTextString(m) }
func (*RequestReconnect) ProtoMessage()    {}
func (*RequestReconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{2}
}

func (m *RequestReconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestReconnect.Unmarshal(m, b)
}
func (m *RequestReconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestReconnect.Marshal(b, m, deterministic)
}
func (m *RequestReconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestReconnect.Merge(m, src)
}
func (m *RequestReconnect) XXX_Size() int {
	return xxx_messageInfo_RequestReconnect.Size(m)
}
func (m *RequestReconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestReconnect.DiscardUnknown(m)
}

var xxx_messageInfo_RequestReconnect proto.InternalMessageInfo

// Message containing connection information of the node to Connect with
type PlatformInfo struct {
	// The connection details of the node the client should connect with
	Primary *NodeInfo `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	// Flag indicating that the connection may be reused to connect. When true, the client _may_ reuse the connection
	//established for the GetPlatformServer request for subsequent requests.
	SameConnection       bool     `protobuf:"varint,2,opt,name=same_connection,json=sameConnection,proto3" json:"same_connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlatformInfo) Reset()         { *m = PlatformInfo{} }
func (m *PlatformInfo) String() string { return proto.CompactTextString(m) }
func (*PlatformInfo) ProtoMessage()    {}
func (*PlatformInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{3}
}

func (m *PlatformInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlatformInfo.Unmarshal(m, b)
}
func (m *PlatformInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlatformInfo.Marshal(b, m, deterministic)
}
func (m *PlatformInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformInfo.Merge(m, src)
}
func (m *PlatformInfo) XXX_Size() int {
	return xxx_messageInfo_PlatformInfo.Size(m)
}
func (m *PlatformInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformInfo proto.InternalMessageInfo

func (m *PlatformInfo) GetPrimary() *NodeInfo {
	if m != nil {
		return m.Primary
	}
	return nil
}

func (m *PlatformInfo) GetSameConnection() bool {
	if m != nil {
		return m.SameConnection
	}
	return false
}

// Message containing connection information for an AxonServer Node
type NodeInfo struct {
	// The host name to use when connecting to this node
	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	// The port number for gRPC connections
	GrpcPort int32 `protobuf:"varint,2,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	// The port number for HTTP connections
	HttpPort int32 `protobuf:"varint,3,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	// The version identifier of the API
	Version int32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// The unique name of the node to connect with, for purpose of debugging
	NodeName             string   `protobuf:"bytes,5,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{4}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *NodeInfo) GetGrpcPort() int32 {
	if m != nil {
		return m.GrpcPort
	}
	return 0
}

func (m *NodeInfo) GetHttpPort() int32 {
	if m != nil {
		return m.HttpPort
	}
	return 0
}

func (m *NodeInfo) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *NodeInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

// Message containing details about the Client Application
type ClientIdentification struct {
	// A unique identifier for this client instance. Is used to distinguish different instances of the same component
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The name of the component. Several instances of the same component should share this name
	ComponentName string `protobuf:"bytes,2,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// Any tags associated with the client, which may provide hints and preferences for setting up connections
	Tags map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Axon framework version used by the client application instance
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientIdentification) Reset()         { *m = ClientIdentification{} }
func (m *ClientIdentification) String() string { return proto.CompactTextString(m) }
func (*ClientIdentification) ProtoMessage()    {}
func (*ClientIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{5}
}

func (m *ClientIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientIdentification.Unmarshal(m, b)
}
func (m *ClientIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientIdentification.Marshal(b, m, deterministic)
}
func (m *ClientIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientIdentification.Merge(m, src)
}
func (m *ClientIdentification) XXX_Size() int {
	return xxx_messageInfo_ClientIdentification.Size(m)
}
func (m *ClientIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_ClientIdentification proto.InternalMessageInfo

func (m *ClientIdentification) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ClientIdentification) GetComponentName() string {
	if m != nil {
		return m.ComponentName
	}
	return ""
}

func (m *ClientIdentification) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ClientIdentification) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Message containing information about the status of a Tracking Event Processor
type EventProcessorInfo struct {
	// The logical name of this processor.
	ProcessorName string `protobuf:"bytes,1,opt,name=processor_name,json=processorName,proto3" json:"processor_name,omitempty"`
	// The mode in which this processor is reading Events, for example: 'Tracking' or 'Subscribing'
	Mode string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	// The number of threads currently actively processing Events
	ActiveThreads int32 `protobuf:"varint,3,opt,name=active_threads,json=activeThreads,proto3" json:"active_threads,omitempty"`
	// Flag indicating whether the processor is running
	Running bool `protobuf:"varint,4,opt,name=running,proto3" json:"running,omitempty"`
	// Flag indicating whether the processor, when stopped, did so because of an irrecoverable Error
	Error bool `protobuf:"varint,5,opt,name=error,proto3" json:"error,omitempty"`
	// Status details of each of the Segments for which Events are being processed. This is only provided by Tracking
	//Event Processors.
	SegmentStatus []*EventProcessorInfo_SegmentStatus `protobuf:"bytes,6,rep,name=segment_status,json=segmentStatus,proto3" json:"segment_status,omitempty"`
	// The number of threads the processor has available to assign to Segments.
	//Will report 0 if all threads are assigned a Segment.
	AvailableThreads     int32    `protobuf:"varint,7,opt,name=available_threads,json=availableThreads,proto3" json:"available_threads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventProcessorInfo) Reset()         { *m = EventProcessorInfo{} }
func (m *EventProcessorInfo) String() string { return proto.CompactTextString(m) }
func (*EventProcessorInfo) ProtoMessage()    {}
func (*EventProcessorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{6}
}

func (m *EventProcessorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProcessorInfo.Unmarshal(m, b)
}
func (m *EventProcessorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProcessorInfo.Marshal(b, m, deterministic)
}
func (m *EventProcessorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProcessorInfo.Merge(m, src)
}
func (m *EventProcessorInfo) XXX_Size() int {
	return xxx_messageInfo_EventProcessorInfo.Size(m)
}
func (m *EventProcessorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProcessorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EventProcessorInfo proto.InternalMessageInfo

func (m *EventProcessorInfo) GetProcessorName() string {
	if m != nil {
		return m.ProcessorName
	}
	return ""
}

func (m *EventProcessorInfo) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *EventProcessorInfo) GetActiveThreads() int32 {
	if m != nil {
		return m.ActiveThreads
	}
	return 0
}

func (m *EventProcessorInfo) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *EventProcessorInfo) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *EventProcessorInfo) GetSegmentStatus() []*EventProcessorInfo_SegmentStatus {
	if m != nil {
		return m.SegmentStatus
	}
	return nil
}

func (m *EventProcessorInfo) GetAvailableThreads() int32 {
	if m != nil {
		return m.AvailableThreads
	}
	return 0
}

// Message containing information about the status of a Segment of a Tracking Event Processor
type EventProcessorInfo_SegmentStatus struct {
	// The ID of the Segment for which the status is reported
	SegmentId int32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	// Indicates whether the Segment has "Caught Up" with the Head of the Event Stream
	CaughtUp bool `protobuf:"varint,2,opt,name=caught_up,json=caughtUp,proto3" json:"caught_up,omitempty"`
	// Indicates whether the Segment is "Replaying" historic events after a Reset.
	Replaying bool `protobuf:"varint,3,opt,name=replaying,proto3" json:"replaying,omitempty"`
	// The fraction this segment processes. A fraction of 2 means 1/2, 4 means 1/4, etc.
	OnePartOf int32 `protobuf:"varint,4,opt,name=one_part_of,json=onePartOf,proto3" json:"one_part_of,omitempty"`
	// The approximate position of the token in the stream.
	TokenPosition int64 `protobuf:"varint,5,opt,name=token_position,json=tokenPosition,proto3" json:"token_position,omitempty"`
	// Information about the error state of the Segment, if applicable.
	ErrorState           string   `protobuf:"bytes,6,opt,name=error_state,json=errorState,proto3" json:"error_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventProcessorInfo_SegmentStatus) Reset()         { *m = EventProcessorInfo_SegmentStatus{} }
func (m *EventProcessorInfo_SegmentStatus) String() string { return proto.CompactTextString(m) }
func (*EventProcessorInfo_SegmentStatus) ProtoMessage()    {}
func (*EventProcessorInfo_SegmentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{6, 0}
}

func (m *EventProcessorInfo_SegmentStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProcessorInfo_SegmentStatus.Unmarshal(m, b)
}
func (m *EventProcessorInfo_SegmentStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProcessorInfo_SegmentStatus.Marshal(b, m, deterministic)
}
func (m *EventProcessorInfo_SegmentStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProcessorInfo_SegmentStatus.Merge(m, src)
}
func (m *EventProcessorInfo_SegmentStatus) XXX_Size() int {
	return xxx_messageInfo_EventProcessorInfo_SegmentStatus.Size(m)
}
func (m *EventProcessorInfo_SegmentStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProcessorInfo_SegmentStatus.DiscardUnknown(m)
}

var xxx_messageInfo_EventProcessorInfo_SegmentStatus proto.InternalMessageInfo

func (m *EventProcessorInfo_SegmentStatus) GetSegmentId() int32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *EventProcessorInfo_SegmentStatus) GetCaughtUp() bool {
	if m != nil {
		return m.CaughtUp
	}
	return false
}

func (m *EventProcessorInfo_SegmentStatus) GetReplaying() bool {
	if m != nil {
		return m.Replaying
	}
	return false
}

func (m *EventProcessorInfo_SegmentStatus) GetOnePartOf() int32 {
	if m != nil {
		return m.OnePartOf
	}
	return 0
}

func (m *EventProcessorInfo_SegmentStatus) GetTokenPosition() int64 {
	if m != nil {
		return m.TokenPosition
	}
	return 0
}

func (m *EventProcessorInfo_SegmentStatus) GetErrorState() string {
	if m != nil {
		return m.ErrorState
	}
	return ""
}

// Message providing reference to an Event Processor
type EventProcessorReference struct {
	// The name of the Event Processor
	ProcessorName        string   `protobuf:"bytes,1,opt,name=processor_name,json=processorName,proto3" json:"processor_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventProcessorReference) Reset()         { *m = EventProcessorReference{} }
func (m *EventProcessorReference) String() string { return proto.CompactTextString(m) }
func (*EventProcessorReference) ProtoMessage()    {}
func (*EventProcessorReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{7}
}

func (m *EventProcessorReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProcessorReference.Unmarshal(m, b)
}
func (m *EventProcessorReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProcessorReference.Marshal(b, m, deterministic)
}
func (m *EventProcessorReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProcessorReference.Merge(m, src)
}
func (m *EventProcessorReference) XXX_Size() int {
	return xxx_messageInfo_EventProcessorReference.Size(m)
}
func (m *EventProcessorReference) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProcessorReference.DiscardUnknown(m)
}

var xxx_messageInfo_EventProcessorReference proto.InternalMessageInfo

func (m *EventProcessorReference) GetProcessorName() string {
	if m != nil {
		return m.ProcessorName
	}
	return ""
}

// Message providing reference to a Segment of an Event Processor
type EventProcessorSegmentReference struct {
	// The name of the Event Processor
	ProcessorName string `protobuf:"bytes,1,opt,name=processor_name,json=processorName,proto3" json:"processor_name,omitempty"`
	// The identifier of the Segment
	SegmentIdentifier    int32    `protobuf:"varint,2,opt,name=segment_identifier,json=segmentIdentifier,proto3" json:"segment_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventProcessorSegmentReference) Reset()         { *m = EventProcessorSegmentReference{} }
func (m *EventProcessorSegmentReference) String() string { return proto.CompactTextString(m) }
func (*EventProcessorSegmentReference) ProtoMessage()    {}
func (*EventProcessorSegmentReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{8}
}

func (m *EventProcessorSegmentReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProcessorSegmentReference.Unmarshal(m, b)
}
func (m *EventProcessorSegmentReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProcessorSegmentReference.Marshal(b, m, deterministic)
}
func (m *EventProcessorSegmentReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProcessorSegmentReference.Merge(m, src)
}
func (m *EventProcessorSegmentReference) XXX_Size() int {
	return xxx_messageInfo_EventProcessorSegmentReference.Size(m)
}
func (m *EventProcessorSegmentReference) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProcessorSegmentReference.DiscardUnknown(m)
}

var xxx_messageInfo_EventProcessorSegmentReference proto.InternalMessageInfo

func (m *EventProcessorSegmentReference) GetProcessorName() string {
	if m != nil {
		return m.ProcessorName
	}
	return ""
}

func (m *EventProcessorSegmentReference) GetSegmentIdentifier() int32 {
	if m != nil {
		return m.SegmentIdentifier
	}
	return 0
}

type Heartbeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{9}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PlatformInboundInstruction)(nil), "io.axoniq.axonserver.grpc.control.PlatformInboundInstruction")
	proto.RegisterType((*PlatformOutboundInstruction)(nil), "io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction")
	proto.RegisterType((*RequestReconnect)(nil), "io.axoniq.axonserver.grpc.control.RequestReconnect")
	proto.RegisterType((*PlatformInfo)(nil), "io.axoniq.axonserver.grpc.control.PlatformInfo")
	proto.RegisterType((*NodeInfo)(nil), "io.axoniq.axonserver.grpc.control.NodeInfo")
	proto.RegisterType((*ClientIdentification)(nil), "io.axoniq.axonserver.grpc.control.ClientIdentification")
	proto.RegisterMapType((map[string]string)(nil), "io.axoniq.axonserver.grpc.control.ClientIdentification.TagsEntry")
	proto.RegisterType((*EventProcessorInfo)(nil), "io.axoniq.axonserver.grpc.control.EventProcessorInfo")
	proto.RegisterType((*EventProcessorInfo_SegmentStatus)(nil), "io.axoniq.axonserver.grpc.control.EventProcessorInfo.SegmentStatus")
	proto.RegisterType((*EventProcessorReference)(nil), "io.axoniq.axonserver.grpc.control.EventProcessorReference")
	proto.RegisterType((*EventProcessorSegmentReference)(nil), "io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference")
	proto.RegisterType((*Heartbeat)(nil), "io.axoniq.axonserver.grpc.control.Heartbeat")
}

func init() { proto.RegisterFile("control.proto", fileDescriptor_0c5120591600887d) }

var fileDescriptor_0c5120591600887d = []byte{
	// 1067 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x4f, 0x6f, 0x1b, 0xb7,
	0x13, 0xd5, 0x5a, 0xfe, 0xb3, 0x3b, 0xb6, 0xfc, 0x87, 0x3f, 0xff, 0x10, 0x55, 0x4e, 0x52, 0x77,
	0x81, 0xa0, 0x2e, 0xd2, 0xca, 0x45, 0x82, 0x22, 0x45, 0x80, 0x14, 0x4d, 0x0c, 0xa3, 0x12, 0x50,
	0xd8, 0x02, 0x1d, 0x5f, 0x72, 0x59, 0xd0, 0xab, 0x91, 0xbc, 0xb5, 0x96, 0xdc, 0x90, 0x94, 0x50,
	0x1f, 0xda, 0x5e, 0x8a, 0xde, 0x8b, 0x5e, 0x7a, 0xe9, 0xb5, 0xdf, 0xa7, 0x9f, 0xa8, 0x05, 0xb9,
	0x5c, 0x49, 0x96, 0x94, 0x44, 0x36, 0x74, 0xb2, 0xf6, 0xcd, 0xce, 0x7b, 0x33, 0x43, 0xf2, 0x71,
	0x0d, 0x95, 0x58, 0x70, 0x2d, 0x45, 0xaf, 0x9e, 0x49, 0xa1, 0x05, 0xf9, 0x24, 0x11, 0x75, 0xf6,
	0xa3, 0xe0, 0xc9, 0x5b, 0xfb, 0x47, 0xa1, 0x1c, 0xa0, 0xac, 0x77, 0x65, 0x16, 0xd7, 0xdd, 0x8b,
	0xb5, 0x8d, 0x58, 0xa4, 0xa9, 0xe0, 0x79, 0x42, 0xf8, 0x57, 0x19, 0x6a, 0xad, 0x1e, 0xd3, 0x1d,
	0x21, 0xd3, 0x26, 0xbf, 0x10, 0x7d, 0xde, 0x6e, 0x72, 0xa5, 0x65, 0x3f, 0xd6, 0x89, 0xe0, 0xe4,
	0x1c, 0x7c, 0x89, 0xdd, 0x44, 0x69, 0x94, 0x55, 0x6f, 0xdf, 0x3b, 0x58, 0x7f, 0xf2, 0xac, 0xfe,
	0x41, 0x89, 0xfa, 0x51, 0x2f, 0x41, 0xae, 0x9b, 0x6d, 0xe4, 0x3a, 0xe9, 0x24, 0x31, 0x33, 0x54,
	0x8d, 0x12, 0x1d, 0x52, 0x91, 0x04, 0x76, 0x71, 0x80, 0x5c, 0x47, 0x99, 0x14, 0x31, 0x2a, 0x25,
	0x64, 0x94, 0xf0, 0x8e, 0xa8, 0x2e, 0x59, 0x89, 0xaf, 0xe6, 0x90, 0x38, 0x36, 0xe9, 0xad, 0x22,
	0xbb, 0xc9, 0x3b, 0xa2, 0x51, 0xa2, 0x04, 0xa7, 0x50, 0xf2, 0x3d, 0x04, 0x97, 0xc8, 0xa4, 0xbe,
	0x40, 0xa6, 0xab, 0x65, 0xcb, 0xff, 0xf9, 0x1c, 0xfc, 0x8d, 0x22, 0xa7, 0x51, 0xa2, 0x23, 0x02,
	0xf2, 0x02, 0xca, 0x2c, 0xbe, 0xaa, 0x2e, 0x5b, 0x9e, 0xcf, 0xde, 0xc3, 0x33, 0x36, 0xc4, 0x97,
	0xf1, 0x55, 0xa3, 0x44, 0x4d, 0x1e, 0x79, 0x04, 0x9b, 0xc9, 0x28, 0x10, 0x25, 0xed, 0xea, 0xca,
	0xbe, 0x77, 0x10, 0xd0, 0xca, 0x18, 0xda, 0x6c, 0xbf, 0x0a, 0x60, 0x4d, 0xe2, 0xdb, 0x3e, 0x2a,
	0x1d, 0xfe, 0xeb, 0xc3, 0x5e, 0xb1, 0x3e, 0xa7, 0x7d, 0x3d, 0xb5, 0x40, 0x6f, 0x60, 0x87, 0x8b,
	0x36, 0x46, 0x5c, 0x8c, 0x46, 0xed, 0x56, 0xea, 0xf1, 0x1c, 0x6d, 0x9e, 0x88, 0x36, 0xba, 0xe1,
	0x6d, 0x1b, 0x9e, 0x93, 0x31, 0x1a, 0x72, 0x01, 0x3b, 0xae, 0x8c, 0x48, 0x62, 0x2c, 0x38, 0xc7,
	0xb8, 0x18, 0xe1, 0xd3, 0x39, 0xb8, 0x69, 0x9e, 0x4b, 0x8b, 0x54, 0xa3, 0x21, 0x27, 0x30, 0x92,
	0xc1, 0xff, 0x33, 0xd6, 0x57, 0x18, 0x4d, 0xec, 0x07, 0x37, 0xe2, 0xe7, 0xb7, 0xde, 0x0a, 0x14,
	0x3b, 0x28, 0x91, 0xc7, 0xd8, 0x28, 0xd1, 0xff, 0x59, 0xea, 0x9b, 0x71, 0xa3, 0xa8, 0x34, 0x93,
	0x7a, 0x4a, 0x71, 0x65, 0x11, 0x8a, 0x96, 0x7a, 0x42, 0xb1, 0x07, 0x5b, 0x12, 0x7b, 0xc8, 0x14,
	0x46, 0x0a, 0xbb, 0x29, 0x72, 0x5d, 0x5d, 0xb5, 0x5a, 0x2f, 0x6f, 0xad, 0x75, 0x96, 0xe7, 0x8f,
	0x4b, 0x6e, 0x3a, 0x6e, 0x17, 0x22, 0x3f, 0xc1, 0xfd, 0x62, 0xd5, 0x66, 0x9e, 0xb1, 0xb5, 0x05,
	0xb4, 0xf9, 0x91, 0x53, 0x98, 0x3e, 0x85, 0xe4, 0x37, 0x0f, 0x1e, 0xa8, 0xac, 0x97, 0x4c, 0xab,
	0x17, 0xbd, 0xfb, 0x8b, 0xeb, 0xbd, 0x66, 0x95, 0x66, 0xbe, 0x66, 0x0b, 0x49, 0x51, 0x76, 0xf1,
	0x9d, 0x85, 0x04, 0x0b, 0x2c, 0xc4, 0x2a, 0xcd, 0x2e, 0xe4, 0x86, 0x03, 0xc1, 0x82, 0x1c, 0x68,
	0x7d, 0x61, 0x0e, 0xb4, 0xf1, 0x01, 0x07, 0x22, 0xb0, 0x3d, 0x79, 0x92, 0xc3, 0x9f, 0x61, 0x63,
	0x74, 0x69, 0x74, 0x04, 0x39, 0x86, 0xb5, 0x4c, 0x26, 0x29, 0x93, 0xd7, 0x77, 0xf0, 0x1e, 0x5a,
	0xe4, 0x92, 0x4f, 0x61, 0x4b, 0xb1, 0x14, 0x23, 0x27, 0x63, 0xac, 0xcc, 0xdc, 0x08, 0x3e, 0xdd,
	0x34, 0xf0, 0xd1, 0x10, 0x0d, 0xff, 0xf4, 0xc0, 0x2f, 0xd2, 0xc9, 0x1e, 0x04, 0x97, 0x42, 0xe9,
	0x88, 0xb3, 0x14, 0xad, 0x7c, 0x40, 0x7d, 0x03, 0x9c, 0xb0, 0x14, 0x4d, 0xd0, 0x88, 0x46, 0x99,
	0x90, 0xda, 0x92, 0xad, 0x50, 0xdf, 0x00, 0x2d, 0x21, 0xb5, 0xcd, 0xd4, 0x3a, 0xcb, 0x83, 0xe5,
	0x3c, 0x68, 0x00, 0x1b, 0xac, 0xc2, 0xda, 0x00, 0xa5, 0x32, 0x45, 0x2c, 0xdb, 0x50, 0xf1, 0x68,
	0xd2, 0x72, 0xcf, 0x35, 0x82, 0xb9, 0x81, 0xfb, 0xd6, 0x3c, 0x59, 0x8a, 0xe1, 0xaf, 0x4b, 0xb0,
	0x3b, 0xeb, 0xfe, 0x33, 0x59, 0xb1, 0xc5, 0xcd, 0xd0, 0x5d, 0x99, 0xb1, 0x7b, 0xd1, 0x2c, 0x4b,
	0x2c, 0xd2, 0x4c, 0x70, 0x13, 0xb7, 0xbc, 0x4b, 0xf9, 0xb2, 0x0c, 0x51, 0xdb, 0xcd, 0x39, 0x2c,
	0x6b, 0xd6, 0x55, 0xd5, 0xf2, 0x7e, 0x79, 0xce, 0x9d, 0x3b, 0xab, 0x94, 0xfa, 0x6b, 0xd6, 0x55,
	0xc7, 0x5c, 0xcb, 0x6b, 0x6a, 0xe9, 0x26, 0x5b, 0x0d, 0x86, 0xad, 0xd6, 0x9e, 0x41, 0x30, 0x7c,
	0x99, 0x6c, 0x43, 0xf9, 0x0a, 0xaf, 0x5d, 0xed, 0xe6, 0x27, 0xd9, 0x85, 0x95, 0x01, 0xeb, 0xf5,
	0x8b, 0x6a, 0xf3, 0x87, 0xe7, 0x4b, 0x5f, 0x7b, 0xe1, 0x1f, 0xcb, 0x40, 0x66, 0xb8, 0xc3, 0x23,
	0xd8, 0x1c, 0x9d, 0xc3, 0xb1, 0x05, 0xab, 0x0c, 0x51, 0xdb, 0x27, 0x81, 0xe5, 0x54, 0xb4, 0x0b,
	0x5a, 0xfb, 0xdb, 0xa4, 0xb2, 0x58, 0x27, 0x03, 0x8c, 0xf4, 0xa5, 0x44, 0xd6, 0x56, 0x6e, 0xc5,
	0x2a, 0x39, 0xfa, 0x3a, 0x07, 0x4d, 0x2f, 0xb2, 0xcf, 0x79, 0xc2, 0xbb, 0xb6, 0x17, 0x9f, 0x16,
	0x8f, 0xa6, 0x58, 0x94, 0xd2, 0x19, 0xbd, 0x4f, 0xf3, 0x07, 0xf2, 0x03, 0x6c, 0x3a, 0x3f, 0x88,
	0x94, 0x66, 0xba, 0xaf, 0xaa, 0xab, 0x76, 0xb8, 0x47, 0x77, 0xfa, 0x08, 0xa9, 0xbb, 0x43, 0x7f,
	0x66, 0xa9, 0x68, 0x45, 0x8d, 0x3f, 0x92, 0xc7, 0xb0, 0xc3, 0x06, 0x2c, 0xe9, 0xb1, 0x8b, 0xde,
	0xa8, 0x8b, 0x35, 0xdb, 0xc5, 0xf6, 0x30, 0xe0, 0x1a, 0xa9, 0xfd, 0xe3, 0x41, 0xe5, 0x06, 0x1b,
	0x79, 0x00, 0x50, 0x94, 0xea, 0xb6, 0xd0, 0x0a, 0x0d, 0x1c, 0xd2, 0x6c, 0xdb, 0x0d, 0xc6, 0xfa,
	0xdd, 0x4b, 0x1d, 0xf5, 0x33, 0x77, 0x6e, 0xfc, 0x1c, 0x38, 0xcf, 0xc8, 0x7d, 0x08, 0x24, 0x66,
	0x3d, 0x76, 0x6d, 0x06, 0x53, 0xb6, 0xc1, 0x11, 0x40, 0x1e, 0xc2, 0xba, 0xe0, 0x18, 0x65, 0xe6,
	0x5a, 0x14, 0x1d, 0xb7, 0xdf, 0x03, 0xc1, 0xb1, 0xc5, 0xa4, 0x3e, 0xed, 0x98, 0xd9, 0x6b, 0x71,
	0x85, 0x3c, 0xca, 0x84, 0x4a, 0xec, 0xb9, 0x34, 0x33, 0x2c, 0xd3, 0x8a, 0x45, 0x5b, 0x0e, 0x24,
	0x1f, 0xc3, 0xba, 0x1d, 0xaa, 0x9d, 0x24, 0xda, 0x4b, 0x2e, 0xa0, 0x60, 0x21, 0xd3, 0x02, 0x86,
	0xdf, 0xc2, 0xbd, 0x77, 0x5c, 0x2a, 0x73, 0xee, 0x8c, 0x70, 0x00, 0x0f, 0xdf, 0x6f, 0xc6, 0xf3,
	0x6e, 0xb1, 0x2f, 0x80, 0x8c, 0x86, 0x99, 0x9f, 0x0e, 0x94, 0xce, 0x21, 0x76, 0x86, 0x43, 0x2d,
	0x02, 0xe1, 0x3a, 0x04, 0x43, 0x43, 0x7e, 0xf2, 0xf7, 0x12, 0x6c, 0x15, 0xfe, 0x77, 0x86, 0x72,
	0x90, 0xc4, 0x48, 0x7e, 0x81, 0x9d, 0xef, 0x50, 0x8f, 0xa3, 0x28, 0xc9, 0x5d, 0x3f, 0x96, 0x6b,
	0x87, 0x73, 0x24, 0x8e, 0x3b, 0x70, 0x58, 0x22, 0xbf, 0x7b, 0x00, 0xa7, 0x19, 0xf2, 0x33, 0x2d,
	0x91, 0xa5, 0xe4, 0xc5, 0xad, 0x18, 0x26, 0xbf, 0x2b, 0x6b, 0xdf, 0xdc, 0x22, 0x7d, 0xc6, 0x77,
	0x69, 0x58, 0x3a, 0xf0, 0xbe, 0xf4, 0x5e, 0xed, 0xb5, 0xbc, 0x37, 0xf7, 0x94, 0x8c, 0x0f, 0xb3,
	0xab, 0xee, 0xa1, 0xc9, 0x3d, 0x1c, 0x71, 0x5d, 0xac, 0xda, 0xff, 0x40, 0x9e, 0xfe, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x6d, 0xc6, 0x01, 0x46, 0xc3, 0x0c, 0x00, 0x00,
}
